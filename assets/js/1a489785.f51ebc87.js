"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2412],{5082:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const r={sidebar_position:7,sidebar_label:"0007 SerenityJS",description:"Use SerenityJS to create business-focused test scenarios, automate acceptance criteria, test domain layer, and generate living documentation.",status:"proposed",contact:"nguyenduy",date:new Date("2024-04-22T00:00:00.000Z"),deciders:"nguyenduy, ikeem07",consulted:"gidich, mgupta83",informed:"etang93, heruwala, anil"},a="Use SerenityJS to ensure delivering right features",o={id:"decisions/serenityjs",title:"Use SerenityJS to ensure delivering right features",description:"Use SerenityJS to create business-focused test scenarios, automate acceptance criteria, test domain layer, and generate living documentation.",source:"@site/docs/decisions/0007-serenityjs.md",sourceDirName:"decisions",slug:"/decisions/serenityjs",permalink:"/docs/decisions/serenityjs",draft:!1,unlisted:!1,editUrl:"https://github.com/simnova/ownercommunity/tree/main/docusaurus/docs/decisions/0007-serenityjs.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,sidebar_label:"0007 SerenityJS",description:"Use SerenityJS to create business-focused test scenarios, automate acceptance criteria, test domain layer, and generate living documentation.",status:"proposed",contact:"nguyenduy",date:"2024-04-22T00:00:00.000Z",deciders:"nguyenduy, ikeem07",consulted:"gidich, mgupta83",informed:"etang93, heruwala, anil"},sidebar:"tutorialSidebar",previous:{title:"0006 Azure Maps Integration Decision",permalink:"/docs/decisions/maps"},next:{title:"0008 White Label",permalink:"/docs/decisions/white-label"}},c={},d=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Decision Drivers",id:"decision-drivers",level:2},{value:"Considered Options",id:"considered-options",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Pros and Cons of the Options",id:"pros-and-cons-of-the-options",level:2},{value:"Links",id:"links",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"use-serenityjs-to-ensure-delivering-right-features",children:"Use SerenityJS to ensure delivering right features"}),"\n",(0,t.jsx)(n.h2,{id:"context-and-problem-statement",children:"Context and Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"When developing a project, it is essential:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"To ensure that the features being developed are what the business wants."}),"\n",(0,t.jsx)(n.li,{children:"To capture all the business requirements and expectations in one place as a contract (living documentation) that can be easily accessed and understood by all stakeholders and team members."}),"\n",(0,t.jsx)(n.li,{children:"To have automated acceptance tests based on the living documentation that ensure the project's features are thoroughly tested."}),"\n",(0,t.jsx)(n.li,{children:"To test the domain layer and application layer (that captures the objects and business logic/rules in the system) to ensure that the business logic/rules are correctly implemented."}),"\n",(0,t.jsx)(n.li,{children:"To be able to identify and fix issues quickly and efficiently when making changes to the codebase."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decision-drivers",children:"Decision Drivers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Business Focus"}),": Ensure that the project's features align with the business requirements and expectations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timely Feedback"}),": Provide timely feedback to the development team and business stakeholders on the project's progress and quality."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep track of the project's features"}),": Document the project's features in a way that is understandable and accessible to all stakeholders and team members."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Domain Layer Testing"}),": Test the domain layer to ensure that the business logic/rules are correctly implemented."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Living Documentation"}),": Generate living documentation that is always up-to-date and reflects the current state of the project's features."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Testing"}),": Automate acceptance tests based on the living documentation to ensure that the project's features are tested thoroughly."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Efficient Issue Identification and Fixing"}),": Identify and fix issues quickly and efficiently when changes are made in the codebase."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"considered-options",children:"Considered Options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Option #1: Use SerenityJS"})}),"\n",(0,t.jsx)(n.p,{children:"SerenityJS with the popular Screenplay pattern provides a high-quality, user-centered approach in automating acceptance tests, testing the domain layer, and generating living documentation. It provides a business-readable DSL (Domain-Specific Language) that can be understood by both developers and business stakeholders."}),"\n",(0,t.jsx)(n.h2,{id:"decision-outcome",children:"Decision Outcome"}),"\n",(0,t.jsxs)(n.p,{children:["Chosen option: ",(0,t.jsx)(n.strong,{children:"Option #1: Use SerenityJS"})]}),"\n",(0,t.jsx)(n.h2,{id:"pros-and-cons-of-the-options",children:"Pros and Cons of the Options"}),"\n",(0,t.jsx)(n.p,{children:"Pros of SerenityJS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Free and open-source"}),": SerenityJS is free and open-source, making it accessible to all teams."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Screenplay pattern"}),": SerenityJS uses the Screenplay pattern, which provides a high-quality, user-centered approach to automating acceptance tests."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Actor"}),": Represents the user or system interacting with the application and plays a role in a test scenario."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementation in code: ",(0,t.jsx)(n.code,{children:"data-access/screenplay/actors.ts"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ability"}),": Represents the user's or system's ability to perform certain actions."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementation in code: ",(0,t.jsx)(n.code,{children:"/data-access/screenplay/abilities"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Interaction"}),": Represents an interaction between the user or system and the application."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementation in code: ",(0,t.jsx)(n.code,{children:"data-access/screenplay/interactions"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Task"}),": Represents a user's or system's action in a test scenario. A task is a sequence of activities that the user or system performs and is reusable to assemble test scenarios."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementation in code: ",(0,t.jsx)(n.code,{children:"data-access/screenplay/interactions"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Question"}),": Represents a query that the user or system asks the application to verify the application's state."]}),"\n",(0,t.jsxs)(n.p,{children:["Implementation in code: ",(0,t.jsx)(n.code,{children:"screenplay/questions"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Business-focused test scenarios"}),": SerenityJS allows for the creation of business-focused test scenarios that can be understood by both developers and business stakeholders."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Automated acceptance tests"}),": SerenityJS enables the automation of acceptance tests, ensuring that the project's features are thoroughly tested."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Domain layer testing"}),": SerenityJS allows for the testing of the domain layer, ensuring that the business logic/rules are correctly implemented."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Living documentation"}),": SerenityJS generates living documentation that is always up-to-date and reflects the current state of the project's features."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Cons of SerenityJS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Learning curve"}),": SerenityJS may have a learning curve for team members who are new to the tool."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Complexity"}),": SerenityJS may introduce additional complexity to the project, especially when defining test scenarios and maintaining the living documentation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Maintenance"}),": SerenityJS may require additional maintenance to keep the test scenarios and living documentation up-to-date."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://serenity-js.org/",children:"SerenityJS"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://serenity-js.org/handbook/design/screenplay-pattern/",children:"Screenplay Pattern"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);