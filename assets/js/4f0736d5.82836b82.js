"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8096],{1744:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=i(4848),s=i(8453);const r={sidebar_position:5,sidebar_label:"0003 Domain Driven Design",description:"Domain Driven Design Decisions.",status:"accepted",contact:"mgupta83",date:new Date("2024-04-18T00:00:00.000Z"),deciders:"gidich, mgupta83",consulted:null,informed:"ikeem07, nguyenduy, heruwala"},a="Use DDD Framework to build the data-access project",o={id:"decisions/domain-driven-design",title:"Use DDD Framework to build the data-access project",description:"Domain Driven Design Decisions.",source:"@site/docs/decisions/0003-domain-driven-design.md",sourceDirName:"decisions",slug:"/decisions/domain-driven-design",permalink:"/docs/decisions/domain-driven-design",draft:!1,unlisted:!1,editUrl:"https://github.com/simnova/ownercommunity/tree/main/docusaurus/docs/decisions/0003-domain-driven-design.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"0003 Domain Driven Design",description:"Domain Driven Design Decisions.",status:"accepted",contact:"mgupta83",date:"2024-04-18T00:00:00.000Z",deciders:"gidich, mgupta83",consulted:null,informed:"ikeem07, nguyenduy, heruwala"},sidebar:"tutorialSidebar",previous:{title:"0004 Authorization and Access Pattern",permalink:"/docs/decisions/authorization"},next:{title:"0005 SerenityJS",permalink:"/docs/decisions/serenityjs"}},l={},c=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Decision Drivers",id:"decision-drivers",level:2},{value:"Decision",id:"decision",level:2},{value:"Domain Layer",id:"domain-layer",level:2},{value:"Context",id:"context",level:3},{value:"Entity",id:"entity",level:3},{value:"Entity Props",id:"entity-props",level:4},{value:"Entity Reference",id:"entity-reference",level:4},{value:"Value Object",id:"value-object",level:3},{value:"Aggregate-Root",id:"aggregate-root",level:3},{value:"Unit of Work",id:"unit-of-work",level:3},{value:"Repository",id:"repository",level:3},{value:"Consequences",id:"consequences",level:2},{value:"More Information",id:"more-information",level:2}];function d(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"use-ddd-framework-to-build-the-data-access-project",children:"Use DDD Framework to build the data-access project"}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"Create a code framework:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"that is easier to maintain and test."}),"\n",(0,t.jsx)(n.li,{children:"that can scale and evolve the system over time."}),"\n",(0,t.jsx)(n.li,{children:"that aligns with the terminology used by domain experts and users."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decision-drivers",children:"Decision Drivers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reduced Complexity"}),": DDD breaks down complex business logic into smaller, more manageable pieces (aggregate roots, entities, value objects, etc.)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Easier Mocking"}),": DDD's emphasis on interfaces and abstraction makes it easier to mock dependencies, reducing the complexity of testing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Separation of Concerns"}),": DDD separate Business Logic from Infrastructure layer, making it easier to test the business logic without worrying about the underlying infrastructure."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ubiquitous Language"}),": DDD promotes a common shared language between developers, domain experts and users, thereby avoiding ambiguity/confusion in communication."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Anti-Corruption Layer"}),": DDD provides a way to isolate the domain layer from external systems, reducing the impact of changes in external systems on the domain layer."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,t.jsx)(n.p,{children:"We will implement a DDD framework using the following components:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Domain Layer"}),": This layer will contain the domain models and business logic to manage them."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Application Service Layer"}),": It serves as an intermediary between the user interface and the domain model.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"coordinates use cases and fulfill application requirements."}),"\n",(0,t.jsx)(n.li,{children:"orchestrates the domain model to execute business logic and retrieve/update data."}),"\n",(0,t.jsx)(n.li,{children:"implements business logic that doesn't naturally fit within the domain model."}),"\n",(0,t.jsx)(n.li,{children:"transaction management and other cross-cutting concerns."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Infrastructure Service Layer"}),": It handles interactions with external systems or services, such as third-party APIs or data stores.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"facilitates communication and translation between the application and external systems"}),"\n",(0,t.jsx)(n.li,{children:"implements anti-corruption layer to translate data and operations between the domain model and external systems using adapters/converters."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"domain-layer",children:"Domain Layer"}),"\n",(0,t.jsx)(n.h3,{id:"context",children:"Context"}),"\n",(0,t.jsx)(n.p,{children:"It defines the scope of a model and ensures that terms and concepts are consistent within that scope."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as a microservice boundary, where each microservice has its own domain model and language."})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/*"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," community"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"entity",children:"Entity"}),"\n",(0,t.jsx)(n.p,{children:"An entity is an object within the domain that has a unique identity and is identifiable throughout its lifetime.\nAn entity may have attributes and relationships with other entities."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as a real-world object that can be uniquely identified by an Id."})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/**/*.ts [..maybe, add '.entity.ts' extension]"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," community, role, member, account"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"entity-props",children:"Entity Props"}),"\n",(0,t.jsx)(n.p,{children:"An interface for attributes or characteristics of an entity. It defines the state of the entity at any given time."}),"\n",(0,t.jsx)(n.h4,{id:"entity-reference",children:"Entity Reference"}),"\n",(0,t.jsx)(n.p,{children:"An interface that governs how an entity refers to another entity. It could be a readonly version of the Entity Props interface, allowing the calling entity to access the referred entity's state but not modify it."}),"\n",(0,t.jsx)(n.h3,{id:"value-object",children:"Value Object"}),"\n",(0,t.jsx)(n.p,{children:"Objects that are equal due to the value of their properties, are called value objects. They are immutable and can be shared across entities."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as a compound attribute set where individual attributes don't have any meaning on their own, but together they represent a concept, like price = 5 USD where price is the value object consisting of amount and currency attributes"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/**/*.value-objects.ts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," community, account, profile ",(0,t.jsx)(n.em,{children:"(Typically, one for each entity, with classes for individual value objects such as address, payment)"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@lucaspaganini/value-objects",children:"@lucaspaganini/value-objects"}),": provides framework to create and validate value objects."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"aggregate-root",children:"Aggregate-Root"}),"\n",(0,t.jsx)(n.p,{children:"An entity that acts as a guardian for a group of related entities (known as an aggregate). It is responsible for maintaining the integrity and consistency of the aggregate and for enforcing business rules."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as an entry point to access and manage a group of related entities."})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/**/*.ts [...maybe, add '.aggregate-root.ts' extension]"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," member (aggregate-root), managing the accounts, custom views, role, etc."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"unit-of-work",children:"Unit of Work"}),"\n",(0,t.jsx)(n.p,{children:"It ensures that a set of changes to the domain model are treated as a single, atomic operation. If one part of the operation fails, the entire operation is rolled back, ensuring data consistency."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as a transaction boundary for data persistence."})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/**/*.uow.ts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," : member ",(0,t.jsx)(n.em,{children:"(Typically, one for each aggregate-root.)"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"repository",children:"Repository"}),"\n",(0,t.jsx)(n.p,{children:"An abstraction that provides access to the aggregate root, encapsulating the details of data storage and retrieval. Repositories make the system more modular and easier to test."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.em,{children:"Think of it as an interface that provides CRUD operations for aggregate root, typically a save and multiple purpose-specific get methods."})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Implementation:"})," src/app/domain/contexts/**/*.uow.ts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," : member ",(0,t.jsx)(n.em,{children:"(Typically, one for each aggregate-root.)"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We will need to invest time in learning and implementing DDD principles and patterns."}),"\n",(0,t.jsx)(n.li,{children:"We will need to ensure that our domain models are correctly defined and separated from the infrastructure."}),"\n",(0,t.jsx)(n.li,{children:"We will need to use interface adapters to connect our application layer to our infrastructure layer."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://learning.oreilly.com/library/view/domain-driven-design-tackling/0321125215/",children:"Domain-Driven Design: Tackling Complexity in the Heart of Software by Eric Evans"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://martinfowler.com/bliki/DomainDrivenDesign.html",children:"Domain Driven Design - Martin Fowler"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);