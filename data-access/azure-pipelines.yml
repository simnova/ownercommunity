# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


trigger:
 paths:
   include:
     - data-access
 branches:
   include:
     - main

pr:
  branches:
    include:
      - main
  paths:
    include:
      - data-access

pool:
  vmImage: ubuntu-latest

variables:
  deploymentDefaultLocation: 'eastus2'
  ServiceConnectionName: 'OwnerCommunity'
  vmImageName: 'ubuntu-latest'
  system.debug: true
  npm_config_cache: $(Pipeline.Workspace)/.npm
  SONAR_USER_HOME: $(Pipeline.Workspace)/.sonar
  UniqueStringDev: 'avaqbizf2s7le'
  UniqueStringQA: 'pnp3ehpzqysdg'
  UniqueStringUAT: 'mbe5flfloncdm'
  UniqueStringPRD: 'lbiusbw5zdgpc'
  UniqueStringTRN: 'fxauyey43w7y6'

stages:
  - template: ./build-pipeline/core/function-app-build-stage.yml
    parameters:
      vmImageName: $(vmImageName)
      npm_config_cache: $(npm_config_cache)
      isNpmCacheAvailable: 'true'
      disableSonarCloudTasks: 'false'
      SONAR_USER_HOME: $(SONAR_USER_HOME)
      SonarCloud: 'SonarCloud'
      SonarCloud_organization: 'simnova'
      SonarCloud_scannerMode: 'CLI'
      SonarCloud_configMode: 'manual'
      SonarCloud_cliProjectKey: 'oc-data-access'
      SonarCloud_cliProjectName: 'oc-data-access'

  - template: ./build-pipeline/core/core-stage.yml
    parameters: 
      dependsOnStage: Build
      environmentNameDevOps: 'Core'
      vmImageName: $(vmImageName)
      ServiceConnectionName: $(ServiceConnectionName)
      deploymentDefaultLocation: $(deploymentDefaultLocation)
      resourceGroupName: 'rg-owner-community'

  - template: ./build-pipeline/core/function-app-deployment-stage.yml
    parameters: 
      stageName: 'DEV'
      dependsOnStage: Core
      environmentNameBicep: 'dev'
      environmentNameDevOps: 'oc-dev'
      vmImageName: $(vmImageName)
      ServiceConnectionName: $(ServiceConnectionName)
      deploymentDefaultLocation: $(deploymentDefaultLocation)
      resourceGroupName: 'rg-owner-community'
      functionAppNamePri: 'oc-dev-func-pri-$(UniqueStringDev)'
      functionAppNameSec: 'oc-dev-func-sec-$(UniqueStringDev)'
      appSettingsJsonFileRelativePathPri: 'data-access/build-pipeline/config/dev-pri.json'
      appSettingsJsonFileRelativePathSec: 'data-access/build-pipeline/config/dev-sec.json'
  
  - template: ./build-pipeline/core/function-app-deployment-stage.yml
    parameters: 
      stageName: 'PRD'
      dependsOnStage: DEV
      environmentNameBicep: 'prd'
      environmentNameDevOps: 'oc-prd'
      vmImageName: $(vmImageName)
      ServiceConnectionName: $(ServiceConnectionName)
      deploymentDefaultLocation: $(deploymentDefaultLocation)
      resourceGroupName: 'rg-owner-community'
      functionAppNamePri: 'oc-prd-func-pri-$(UniqueStringPRD)'
      functionAppNameSec: 'oc-prd-func-sec-$(UniqueStringPRD)'
      appSettingsJsonFileRelativePathPri: 'data-access/build-pipeline/config/prd-pri.json'
      appSettingsJsonFileRelativePathSec: 'data-access/build-pipeline/config/prd-sec.json'