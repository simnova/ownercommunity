
    type CredentialVerificationCaseV1 implements MongoBase {
          caseDetails: CredentialVerificationCaseV1CaseDetails
 assets: CredentialVerificationCaseV1Assets
 revisionRequest: CredentialVerificationCaseV1RevisionRequest
 caseHistory: [CredentialVerificationCaseV1CaseHistory]
 messages: [CredentialVerificationCaseV1Message]
 financeDetails: CredentialVerificationCaseV1FinanceDetails
 activityLog: [CredentialVerificationCaseV1ActivityLog]
 applicant: ApplicantUser
 submittedAt: DateTime
 purgeEligibleAt: DateTime
 expirationEligibleAt: DateTime
 caseType: String
 state: String
 caseName: String
 systemTags: [String]
 tags: [String]
 caseFlagged: [CredentialVerificationCaseV1CaseFlagged]
 search: CredentialVerificationCaseV1Search
      id: ObjectID!
      schemaVersion: String
      createdAt: DateTime
      updatedAt: DateTime
    }
  
      type CredentialVerificationCaseV1OtherIssuingInstitution {
            institutionName: String
addressLine1: String
city: String
stateOrProvince: String
zipOrPostalCode: String
country: String
      }
    
      type CredentialVerificationCaseV1CredentialAssets {
            credential: String
credentialUploadedAt: DateTime
credentialVersion: String
translation: String
translationUploadedAt: DateTime
translationVersion: String
      }
    
      type CredentialVerificationCaseV1EntitySuppliedCredential {
            credential: String
credentialUploadedAt: DateTime
credentialVersion: String
translation: String
translationUploadedAt: DateTime
translationVersion: String
      }
    
      type CredentialVerificationCaseV1Audit {
            completedOn: DateTime
completedBy: StaffUser
result: String
      }
    
      type CredentialVerificationCaseV1Affirmations {
            isNameAcceptable: Boolean
isTranslationAcceptable: Boolean
isCredentialAcceptable: Boolean
isCredentialDetailsAcceptable: Boolean
isDateOfBirthAcceptable: Boolean
isEntityAcceptable: Boolean
isCredentialSentForVerification: Boolean
audit: CredentialVerificationCaseV1Audit
      }
    
      type CredentialVerificationCaseV1VerificationAffirmations {
            isReturnedFromCorrectEntity: Boolean
isVerificationMethodAcceptable: Boolean
isVerificationComplete: Boolean
isVerificationInEnglishOrWithTranslation: Boolean
isEntityDetailCorrect: Boolean
isCredentialReturnedFromEntity: Boolean
isVerificationStatusComplete: Boolean
isVerificationComponentPacketCompiled: Boolean
audit: CredentialVerificationCaseV1Audit
      }
    
      type CredentialVerificationCaseV1InstitutionContactDetails {
            institutionEmail: String
institutionPhone: String
      }
    
      type CredentialVerificationCaseV1AlternateVerifyingEntity {
            isVerifiedWithOther: Boolean
otherDetails: String
      }
    
      type CredentialVerificationCaseV1VerificationStatus {
            verificationResponse: String
      }
    
      type CredentialVerificationCaseV1PrivateCaseDetails {
            institutionContactDetails: CredentialVerificationCaseV1InstitutionContactDetails
alternateVerifyingEntity: CredentialVerificationCaseV1AlternateVerifyingEntity
verificationStatus: CredentialVerificationCaseV1VerificationStatus
entitySuppliedCredential: CredentialVerificationCaseV1EntitySuppliedCredential
      }
    
      type CredentialVerificationCaseV1ApplicationReviewDecision {
            completedOn: DateTime
completedBy: StaffUser
result: String
rejectionReason: String
      }
    
      type CredentialVerificationCaseV1ApplicationReview {
            caseWorkerAssigned: StaffUser
affirmations: CredentialVerificationCaseV1Affirmations
verificationAffirmations: CredentialVerificationCaseV1VerificationAffirmations
privateCaseDetails: CredentialVerificationCaseV1PrivateCaseDetails
decision: CredentialVerificationCaseV1ApplicationReviewDecision
createdAt: DateTime
      }
    
      type CredentialVerificationCaseV1AssetsPrivate {
            verificationForm: String
verificationFormHistory: [CredentialVerificationCaseV1AssetHistory]
verificationPacket: String
verificationPacketHistory: [CredentialVerificationCaseV1AssetHistory]
verificationPacketResponse: String
verificationPacketResponseHistory: [CredentialVerificationCaseV1AssetHistory]
verificationComponentPacket: String
verificationComponentPacketHistory: [CredentialVerificationCaseV1AssetHistory]
      }
    
      type CredentialVerificationCaseV1Assets {
            private: CredentialVerificationCaseV1AssetsPrivate
arbitrary: String
      }
    
      type CredentialVerificationCaseV1RequestedChanges {
            requestUpdatedCredentialDetails: Boolean
requestUploadCredential: Boolean
requestUploadTranslation: Boolean
requestUpdatedIssuingInstitution: Boolean
      }
    
      type CredentialVerificationCaseV1RevisionRequest {
            requestedAt: DateTime
requestedBy: StaffUser
revisionSummary: String
requestedChanges: CredentialVerificationCaseV1RequestedChanges
revisionSubmittedAt: DateTime
      }
    
      type CredentialVerificationCaseV1RevenueRecognitionSubmission {
            debitGlAccount: String
creditGlAccount: String
amount: Int
recognitionDate: Date
completedOn: DateTime
      }
    
      type CredentialVerificationCaseV1RevenueRecognitionRecognition {
            debitGlAccount: String
creditGlAccount: String
amount: Int
recognitionDate: Date
completedOn: DateTime
      }
    
      type CredentialVerificationCaseV1RevenueRecognition {
            submission: CredentialVerificationCaseV1RevenueRecognitionSubmission
recognition: CredentialVerificationCaseV1RevenueRecognitionRecognition
      }
    
      type CredentialVerificationCaseV1FinanceDetails {
            serviceFee: Int
revenueRecognition: CredentialVerificationCaseV1RevenueRecognition
transactions: CredentialVerificationCaseV1FinanceDetailsTransactions
      }
    
      type CredentialVerificationCaseV1TransactionReference {
            vendor: String
referenceId: String
completedOn: DateTime
      }
    
      type CredentialVerificationCaseV1FinanceDetailsTransactionSubmission {
            amount: Int
transactionReference: CredentialVerificationCaseV1TransactionReference
      }
    
      type CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactionsApproval {
            isApplicantApprovalRequired: Boolean
isAppplantApproved: Boolean
applicantRepondedAt: DateTime
      }
    
      type CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactionsFinanceReference {
            debitGlAccount: String
creditGlAccount: String
completedOn: DateTime
      }
    
      type CredentialVerificationCaseV1FinanceDetailsTransactions {
            submission: CredentialVerificationCaseV1FinanceDetailsTransactionSubmission
adhocTransactions: [CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactions]
      }
    
      type CredentialVerificationCaseV1Search {
            hash: String
indexedAt: DateTime
indexingFailedAt: DateTime
      }
    
      type CredentialVerificationCaseV1Application {
            attestedAt: DateTime
credentialTitle: String
program: String
nameOnCredential: String
dateCredentialIssued: Date
credentialType: String
isCredentialInEnglish: Boolean
issuingInstitution: Entity
otherIssuingInstitution: CredentialVerificationCaseV1OtherIssuingInstitution
credentialAssets: CredentialVerificationCaseV1CredentialAssets
sendDestination: String
      }
    
      type CredentialVerificationCaseV1CaseDetails {
            application: CredentialVerificationCaseV1Application
applicationReview: CredentialVerificationCaseV1ApplicationReview
      }
    
      type CredentialVerificationCaseV1AssetHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: StaffUser

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type CredentialVerificationCaseV1CaseHistory implements MongoSubdocument {
            caseDetails: CredentialVerificationCaseV1CaseDetails
revisionRequest: CredentialVerificationCaseV1RevisionRequest

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type CredentialVerificationCaseV1Message implements MongoSubdocument {
            sentBy: String
initiatedBy: StaffUser
message: String
embedding: String
isHiddenFromApplicant: Boolean

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactions implements MongoSubdocument {
            amount: Int
requestedOn: DateTime
requestedBy: StaffUser
reason: String
approval: CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactionsApproval
transactionReference: CredentialVerificationCaseV1TransactionReference
financeReference: CredentialVerificationCaseV1FinanceDetailsTransactionAdhocTransactionsFinanceReference

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type CredentialVerificationCaseV1ActivityLog implements MongoSubdocument {
            activity: String
activityBy: User
description: String
metaData: String
tags: [String]

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type CredentialVerificationCaseV1CaseFlagged implements MongoSubdocument {
            flagType: String
reason: String

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    