
    type SendReportCaseV1 implements MongoBase {
          caseDetails: SendReportCaseV1CaseDetails
 revisionRequest: SendReportCaseV1RevisionRequest
 caseHistory: [SendReportCaseV1CaseHistory]
 assets: SendReportCaseV1Asset
 messages: [SendReportCaseV1Message]
 financeDetails: SendReportCaseV1FinanceDetails
 activityLog: [SendReportCaseV1ActivityLog]
 applicant: ApplicantUser
 submittedAt: DateTime
 purgeEligibleAt: DateTime
 expirationEligibleAt: DateTime
 caseType: String
 state: String
 caseName: String
 systemTags: [String]
 tags: [String]
 caseFlagged: [SendReportCaseV1CaseFlagged]
 search: SendReportCaseV1Search
      id: ObjectID!
      schemaVersion: String
      createdAt: DateTime
      updatedAt: DateTime
    }
  
      type SendReportCaseV1CaseDetailsApplication {
            attestedAt: DateTime
credential: CredentialVerificationCase
destination: Entity
      }
    
      type SendReportCaseV1AuditType {
            completedAt: DateTime
completedBy: StaffUser
result: String
      }
    
      type SendReportCaseV1CaseDetailsApplicationReviewAffirmation {
            isDestinationAcceptable: Boolean
isReportCompiled: Boolean
isReportSent: Boolean
audit: SendReportCaseV1AuditType
      }
    
      type SendReportCaseV1CaseDetailsApplicationReviewPrivateCaseDetailsInstitutionContactDetails {
            institutionEmail: String
institutionPhone: String
      }
    
      type SendReportCaseV1CaseDetailsApplicationReviewPrivateCaseDetails {
            institutionContactDetails: SendReportCaseV1CaseDetailsApplicationReviewPrivateCaseDetailsInstitutionContactDetails
      }
    
      type SendReportCaseV1CaseDetailsApplicationReviewDecision {
            completedAt: DateTime
completedBy: StaffUser
result: String
rejectionReason: String
      }
    
      type SendReportCaseV1CaseDetailsApplicationReview {
            caseWorkerAssigned: StaffUser
affirmations: SendReportCaseV1CaseDetailsApplicationReviewAffirmation
privateCaseDetails: SendReportCaseV1CaseDetailsApplicationReviewPrivateCaseDetails
decision: SendReportCaseV1CaseDetailsApplicationReviewDecision
      }
    
      type SendReportCaseV1CaseDetails {
            initiatedByApplicant: Boolean
application: SendReportCaseV1CaseDetailsApplication
applicationReview: SendReportCaseV1CaseDetailsApplicationReview
createdAt: DateTime
      }
    
      type SendReportCaseV1RevisionRequestRequestChanges {
            requestUpdatedDestination: Boolean
      }
    
      type SendReportCaseV1RevisionRequest {
            requestedAt: DateTime
requestedBy: StaffUser
revisionSummary: String
requestedChanges: SendReportCaseV1RevisionRequestRequestChanges
revisionSubmittedAt: DateTime
      }
    
      type SendReportCaseV1AssetPrivate {
            statusReportCoverLetter: String
statusReportCoverLetterHistory: [SendReportCaseV1AssetPrivateStatusReportCoverLetterHistory]
verificationStatusReport: String
verificationStatusReportHistory: [SendReportCaseV1AssetPrivateVerificationStatusReportHistory]
      }
    
      type SendReportCaseV1Asset {
            private: SendReportCaseV1AssetPrivate
      }
    
      type SendReportCaseV1FinanceDetailsRevenueRecognitionSubmission {
            debitGlAccount: String
creditGlAccount: String
amount: Int
recognizedAt: DateTime
completedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsRevenueRecognitionRecognition {
            debitGlAccount: String
creditGlAccount: String
amount: Int
recognizedAt: DateTime
completedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsRevenueRecognition {
            submission: SendReportCaseV1FinanceDetailsRevenueRecognitionSubmission
recognition: SendReportCaseV1FinanceDetailsRevenueRecognitionRecognition
      }
    
      type SendReportCaseV1FinanceDetailsTransactionSubmissionTransactionReference {
            vendor: String
referenceId: String
completedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsTransactionSubmission {
            amount: Int
transactionReference: SendReportCaseV1FinanceDetailsTransactionSubmissionTransactionReference
      }
    
      type SendReportCaseV1FinanceDetailsTransactionAdhocTransactionApproval {
            isApplicantApprovalRequired: Boolean
isApplicantApproved: Boolean
applicantRespondedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsTransactionAdhocTransactionTransactionReference {
            vendor: String
referenceId: String
completedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsTransactionAdhocTransactionFinanceReference {
            debitGlAccount: String
creditGlAccount: String
completedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsTransactions {
            submission: SendReportCaseV1FinanceDetailsTransactionSubmission
adhocTransactions: [SendReportCaseV1FinanceDetailsTransactionAdhocTransaction]
      }
    
      type SendReportCaseV1FinanceDetails {
            serviceFee: Int
revenueRecognition: SendReportCaseV1FinanceDetailsRevenueRecognition
transactions: SendReportCaseV1FinanceDetailsTransactions
      }
    
      type SendReportCaseV1Search {
            hash: String
indexedAt: DateTime
indexingFailedAt: DateTime
      }
    
      type SendReportCaseV1CaseHistory implements MongoSubdocument {
            caseDetails: SendReportCaseV1CaseDetails
revisionRequest: SendReportCaseV1RevisionRequest

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1AssetPrivateStatusReportCoverLetterHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: StaffUser

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1AssetPrivateVerificationStatusReportHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: StaffUser

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1Message implements MongoSubdocument {
            sentBy: String
initiatedBy: StaffUser
message: String
embedding: String
isHiddenFromApplicant: Boolean

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1FinanceDetailsTransactionAdhocTransaction implements MongoSubdocument {
            amount: Int
requestedAt: DateTime
requestedBy: StaffUser
reason: String
approval: SendReportCaseV1FinanceDetailsTransactionAdhocTransactionApproval
transactionReference: SendReportCaseV1FinanceDetailsTransactionAdhocTransactionTransactionReference
financeReference: SendReportCaseV1FinanceDetailsTransactionAdhocTransactionFinanceReference

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1ActivityLog implements MongoSubdocument {
            activityType: String
activityBy: User
description: String
metaData: String
tags: [String]

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type SendReportCaseV1CaseFlagged implements MongoSubdocument {
            flagType: String
reason: String

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    