
    type IdentityVerificationCaseV1 implements MongoBase {
          caseDetails: IdentityVerificationCaseV1CaseDetails
 revisionRequest: IdentityVerificationCaseV1RevisionRequest
 caseHistory: [IdentityVerificationCaseV1CaseHistory]
 assets: IdentityVerificationCaseV1Assets
 messages: [IdentityVerificationCaseV1Message]
 financeDetails: IdentityVerificationCaseV1FinanceDetails
 activityLog: [IdentityVerificationCaseV1ActivityLog]
 applicant: ApplicantUser
 submittedAt: DateTime
 purgeEligibleAt: DateTime
 expirationEligibleAt: DateTime
 caseType: String
 state: String
 caseName: String
 systemTags: [String]
 tags: [String]
 caseFlagged: [IdentityVerificationCaseV1CaseFlagged]
 search: IdentityVerificationCaseV1Search
      id: ObjectID!
      schemaVersion: String
      createdAt: DateTime
      updatedAt: DateTime
    }
  
      type IdentityVerificationCaseV1CaseDetailsApplicationPhotoAssets {
            photo: String
photoUploadedAt: DateTime
photoVersion: String
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationPassportDetails {
            passportCountry: String
passportNumber: String
passportIssuedAt: DateTime
passportExpiresAt: DateTime
isPassportExpirationDateVisible: Boolean
isPassportInLatinCharacters: Boolean
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationPassportAssets {
            passport: String
passportUploadedAt: DateTime
passportVersion: String
passportExpiration: String
passportExpirationUploadedAt: DateTime
passportExpirationVersion: String
passportTranslation: String
passportTranslationUploadedAt: DateTime
passportTranslationVersion: String
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationNotarizationDetails {
            isNotarizationComplete: Boolean
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplication {
            attestedAt: DateTime
photoAssets: IdentityVerificationCaseV1CaseDetailsApplicationPhotoAssets
caseWorkerModifiedPassportDetails: Boolean
passportDetails: IdentityVerificationCaseV1CaseDetailsApplicationPassportDetails
passportAssets: IdentityVerificationCaseV1CaseDetailsApplicationPassportAssets
notarizationDetails: IdentityVerificationCaseV1CaseDetailsApplicationNotarizationDetails
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReviewNotaryAffirmationsAudit {
            completedAt: DateTime
completedBy: StaffUser
result: String
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReviewNotaryAffirmations {
            isNotaryAcceptable: Boolean
isNotarizedIdAcceptable: Boolean
audit: IdentityVerificationCaseV1CaseDetailsApplicationReviewNotaryAffirmationsAudit
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReviewAffirmationsAudit {
            completedAt: DateTime
completedBy: StaffUser
result: String
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReviewAffirmations {
            isIdDocumentAcceptable: Boolean
isIdDocumentDetailsAcceptable: Boolean
isPhotoAcceptable: Boolean
audit: IdentityVerificationCaseV1CaseDetailsApplicationReviewAffirmationsAudit
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReviewDecision {
            completedAt: DateTime
completedBy: StaffUser
result: String
rejectionReason: String
      }
    
      type IdentityVerificationCaseV1CaseDetailsApplicationReview {
            caseWorkerAssigned: StaffUser
affirmations: IdentityVerificationCaseV1CaseDetailsApplicationReviewAffirmations
notaryAffirmations: IdentityVerificationCaseV1CaseDetailsApplicationReviewNotaryAffirmations
decision: IdentityVerificationCaseV1CaseDetailsApplicationReviewDecision
      }
    
      type IdentityVerificationCaseV1CaseDetails {
            application: IdentityVerificationCaseV1CaseDetailsApplication
applicationReview: IdentityVerificationCaseV1CaseDetailsApplicationReview
createdAt: DateTime
      }
    
      type IdentityVerificationCaseV1RevisionRequestRequestedChanges {
            requestUpdatedPassportDetails: Boolean
requestUploadPassport: Boolean
requestUploadExpirationPage: Boolean
requestUploadPassportTranslation: Boolean
requestUploadPhoto: Boolean
      }
    
      type IdentityVerificationCaseV1RevisionRequest {
            requestedAt: DateTime
requestedBy: StaffUser
revisionSummary: String
requestedChanges: IdentityVerificationCaseV1RevisionRequestRequestedChanges
revisionSubmittedAt: DateTime
      }
    
      type IdentityVerificationCaseV1AssetsPrivate {
            redactedNotarizedIdForm: String
redactedNotarizedIdFormHistory: [IdentityVerificationCaseV1AssetsPrivateRedactedNotarizedIdFormHistory]
      }
    
      type IdentityVerificationCaseV1AssetsShared {
            idForm: String
idFormHistory: [IdentityVerificationCaseV1AssetsSharedIdFormHistory]
notarizedIdForm: String
notarizedIdFormHistory: [IdentityVerificationCaseV1AssetsSharedNotarizedIdFormHistory]
      }
    
      type IdentityVerificationCaseV1Assets {
            shared: IdentityVerificationCaseV1AssetsShared
private: IdentityVerificationCaseV1AssetsPrivate
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionFinanceReference {
            debitGlAccount: String
creditGlAccount: String
completedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionTransactionReference {
            vendor: String
referenceId: String
completedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionApproval {
            isApplicantApprovalRequired: Boolean
isApplicantApproved: Boolean
applicantRespondedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsSubmissionTransactionReference {
            vendor: String
referenceId: String
completedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsSubmission {
            amount: Float
transactionReference: IdentityVerificationCaseV1FinanceDetailsTransactionsSubmissionTransactionReference
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactions {
            submission: IdentityVerificationCaseV1FinanceDetailsTransactionsSubmission
adhocTransactions: [IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransaction]
      }
    
      type IdentityVerificationCaseV1FinanceDetailsRevenueRecognitionSubmission {
            debitGlAccount: String
creditGlAccount: String
amount: Float
recognizedAt: DateTime
completedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsRevenueRecognitionRecognition {
            debitGlAccount: String
creditGlAccount: String
amount: Float
recognizedAt: DateTime
completedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsRevenueRecognition {
            submission: IdentityVerificationCaseV1FinanceDetailsRevenueRecognitionSubmission
recognition: IdentityVerificationCaseV1FinanceDetailsRevenueRecognitionRecognition
      }
    
      type IdentityVerificationCaseV1FinanceDetails {
            serviceFee: Float
revenueRecognition: IdentityVerificationCaseV1FinanceDetailsRevenueRecognition
transactions: IdentityVerificationCaseV1FinanceDetailsTransactions
      }
    
      type IdentityVerificationCaseV1Search {
            hash: String
indexedAt: DateTime
indexingFailedAt: DateTime
      }
    
      type IdentityVerificationCaseV1CaseHistory implements MongoSubdocument {
            caseDetails: IdentityVerificationCaseV1CaseDetails
revisionRequest: IdentityVerificationCaseV1RevisionRequest

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1AssetsPrivateRedactedNotarizedIdFormHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: User

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1AssetsSharedNotarizedIdFormHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: User

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1AssetsSharedIdFormHistory implements MongoSubdocument {
            assetVersion: String
assetUploadedBy: User

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1Message implements MongoSubdocument {
            sentBy: String
initiatedBy: StaffUser
message: String
embedding: String
isHiddenFromApplicant: Boolean

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransaction implements MongoSubdocument {
            amount: Float
requestedAt: DateTime
requestedBy: StaffUser
reason: String
approval: IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionApproval
transactionReference: IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionTransactionReference
financeReference: IdentityVerificationCaseV1FinanceDetailsTransactionsAdhocTransactionFinanceReference

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1ActivityLog implements MongoSubdocument {
            activityType: String
activityBy: User
description: String
metaData: String
tags: [String]

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    
      type IdentityVerificationCaseV1CaseFlagged implements MongoSubdocument {
            flagType: String
reason: String

        id: ObjectID!
        createdAt: DateTime
        updatedAt: DateTime
      }
    